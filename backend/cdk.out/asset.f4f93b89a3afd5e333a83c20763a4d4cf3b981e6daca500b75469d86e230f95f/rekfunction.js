"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const client_rekognition_1 = require("@aws-sdk/client-rekognition");
const client = new client_rekognition_1.Rekognition();
const handler = async (event = {}) => {
    var key = event.Records[0].s3.object.key;
    key = key.replace("%3A", ":");
    console.log(key);
    const params = {
        Image: {
            S3Object: {
                Bucket: process.env.BUCKET_NAME,
                Name: key
            },
        },
        MaxLabels: 10,
        MinConfidence: 70
    };
    const response = await client.detectLabels(params);
    const labels = response.Labels || [];
    console.log(labels.map(i => i.Name).toString());
    // Write to DDB
    const tableName = process.env.TABLE_NAME || "";
    const dynamodb = new client_dynamodb_1.DynamoDB();
    const dynamodbParams = {
        TableName: tableName,
        Item: {
            image_name: { 'S': key },
            labels: { 'S': labels.map(i => i.Name).toString() }
        },
        ConditionExpression: 'attribute_not_exists(image_name)'
    };
    try {
        await dynamodb.putItem(dynamodbParams);
    }
    catch (err) {
        console.log(err);
    }
    return;
};
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVrZnVuY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZWtmdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4REFBb0Q7QUFDcEQsb0VBQW9GO0FBRXBGLE1BQU0sTUFBTSxHQUFHLElBQUksZ0NBQVcsRUFBRSxDQUFDO0FBQzFCLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxRQUFhLEVBQUUsRUFBZ0IsRUFBRTtJQUMzRCxJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFBO0lBQ3hDLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWpCLE1BQU0sTUFBTSxHQUE2QjtRQUNyQyxLQUFLLEVBQUU7WUFDSCxRQUFRLEVBQUU7Z0JBQ04sTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVztnQkFDL0IsSUFBSSxFQUFFLEdBQUc7YUFDWjtTQUNKO1FBQ0QsU0FBUyxFQUFFLEVBQUU7UUFDYixhQUFhLEVBQUUsRUFBRTtLQUNwQixDQUFDO0lBRUYsTUFBTSxRQUFRLEdBQUcsTUFBTSxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25ELE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDO0lBQ3JDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBRWhELGVBQWU7SUFDZixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsSUFBSSxFQUFFLENBQUM7SUFDL0MsTUFBTSxRQUFRLEdBQUcsSUFBSSwwQkFBUSxFQUFFLENBQUM7SUFFaEMsTUFBTSxjQUFjLEdBQUc7UUFDbkIsU0FBUyxFQUFFLFNBQVM7UUFDcEIsSUFBSSxFQUFFO1lBQ0YsVUFBVSxFQUFFLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBQztZQUN0QixNQUFNLEVBQUUsRUFBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBQztTQUNwRDtRQUNELG1CQUFtQixFQUFFLGtDQUFrQztLQUMxRCxDQUFDO0lBRUYsSUFBSTtRQUNBLE1BQU0sUUFBUSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUMxQztJQUNELE9BQU0sR0FBRyxFQUFFO1FBQ1AsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNwQjtJQUVELE9BQU87QUFDWCxDQUFDLENBQUM7QUF6Q1csUUFBQSxPQUFPLFdBeUNsQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtb0RCIH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LWR5bmFtb2RiJztcbmltcG9ydCB7IERldGVjdExhYmVsc0NvbW1hbmRJbnB1dCwgUmVrb2duaXRpb24gfSBmcm9tICdAYXdzLXNkay9jbGllbnQtcmVrb2duaXRpb24nO1xuXG5jb25zdCBjbGllbnQgPSBuZXcgUmVrb2duaXRpb24oKTtcbmV4cG9ydCBjb25zdCBoYW5kbGVyID0gYXN5bmMgKGV2ZW50OiBhbnkgPSB7fSk6IFByb21pc2U8YW55PiA9PiB7XG4gICAgdmFyIGtleSA9IGV2ZW50LlJlY29yZHNbMF0uczMub2JqZWN0LmtleVxuICAgIGtleSA9IGtleS5yZXBsYWNlKFwiJTNBXCIsIFwiOlwiKVxuICAgIGNvbnNvbGUubG9nKGtleSk7XG5cbiAgICBjb25zdCBwYXJhbXM6IERldGVjdExhYmVsc0NvbW1hbmRJbnB1dCA9IHtcbiAgICAgICAgSW1hZ2U6IHtcbiAgICAgICAgICAgIFMzT2JqZWN0OiB7XG4gICAgICAgICAgICAgICAgQnVja2V0OiBwcm9jZXNzLmVudi5CVUNLRVRfTkFNRSxcbiAgICAgICAgICAgICAgICBOYW1lOiBrZXlcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIE1heExhYmVsczogMTAsXG4gICAgICAgIE1pbkNvbmZpZGVuY2U6IDcwXG4gICAgfTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmRldGVjdExhYmVscyhwYXJhbXMpO1xuICAgIGNvbnN0IGxhYmVscyA9IHJlc3BvbnNlLkxhYmVscyB8fCBbXTtcbiAgICBjb25zb2xlLmxvZyhsYWJlbHMubWFwKGkgPT4gaS5OYW1lKS50b1N0cmluZygpKTtcblxuICAgIC8vIFdyaXRlIHRvIEREQlxuICAgIGNvbnN0IHRhYmxlTmFtZSA9IHByb2Nlc3MuZW52LlRBQkxFX05BTUUgfHwgXCJcIjtcbiAgICBjb25zdCBkeW5hbW9kYiA9IG5ldyBEeW5hbW9EQigpO1xuXG4gICAgY29uc3QgZHluYW1vZGJQYXJhbXMgPSB7XG4gICAgICAgIFRhYmxlTmFtZTogdGFibGVOYW1lLFxuICAgICAgICBJdGVtOiB7XG4gICAgICAgICAgICBpbWFnZV9uYW1lOiB7J1MnOiBrZXl9LFxuICAgICAgICAgICAgbGFiZWxzOiB7J1MnOiBsYWJlbHMubWFwKGkgPT4gaS5OYW1lKS50b1N0cmluZygpfVxuICAgICAgICB9LFxuICAgICAgICBDb25kaXRpb25FeHByZXNzaW9uOiAnYXR0cmlidXRlX25vdF9leGlzdHMoaW1hZ2VfbmFtZSknXG4gICAgfTtcblxuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGR5bmFtb2RiLnB1dEl0ZW0oZHluYW1vZGJQYXJhbXMpO1xuICAgIH1cbiAgICBjYXRjaChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuO1xufTtcbiJdfQ==